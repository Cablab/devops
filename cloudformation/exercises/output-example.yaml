Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t2.micro 
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  NameOfService:
    Type: String
    Description: The name of the service this stack is to be used for
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName 
    Description: Name of EC2 login key

Mappings: 
  RegionMap:
    us-east-1: 
      "HVM64": "ami-0ff8a91507f77f867"
    us-west-1: 
      "HVM64": "ami-0bdb828fd58c52235"
    eu-west-1: 
      "HVM64": "ami-047bb4163c506cd98"
    ap-southeast-1: 
      "HVM64": "ami-08569b978cc4dfa10"
    ap-northeast-1: 
      "HVM64": "ami-06cd52961ce9f0d85"

Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParameter # Referencing Parameter above
      KeyName: !Ref KeyName # Referencing Parameter above
      ImageId: !FindInMap
        - RegionMap
        - !Ref AWS::Region
        - HVM64
      Tags:
      - Key: "Name"
        Value: !Ref NameOfService
      SecurityGroups:
      - !Ref VprofileSG

  VprofileSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh & http from MyIP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: <my-IP-address>

# Outputs allow you print output values or expose output values
# for subsequent Templates after the above Template has executed
Outputs:
  PrintSomeInfo:
    # Value allows you to print the value of something
    Value: !GetAtt # !GetAtt lets you target something defined above
      - MyInstance # First argument is the Logical ID
      - PublicDnsName # Second argument is a Property of that resource Type
      # So this is kinda like AWS::EC2::Instance::PublicDnsName
